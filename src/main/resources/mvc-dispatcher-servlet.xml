<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
      http://www.springframework.org/schema/task
      http://www.springframework.org/schema/task/spring-task-3.0.xsd">
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--<mvc:annotation-driven>-->
        <!--<mvc:message-converters>-->
            <!--<bean class="org.springframework.http.converter.json.GsonHttpMessageConverter"/>-->
        <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <ref bean="stringHttpMessageConverter" />
            <ref bean="fastJsonHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8" index="0"></constructor-arg>
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <property name="fastJsonConfig">
            <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
                <property name="features">
                    <list>
                        <value>AllowArbitraryCommas</value>
                        <value>AllowUnQuotedFieldNames</value>
                        <value>DisableCircularReferenceDetect</value>
                    </list>
                </property>
                <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"></property>
            </bean>
        </property>
    </bean>

    <mvc:resources location="/js/" mapping="/js/**" cache-period="2592000"/>
    <mvc:resources location="/css/" mapping="/css/**" cache-period="2592000"/>

    <mvc:default-servlet-handler />
    <bean class="tv.duojiao.spider.SwaggerConfig" />
    <!--<bean class="tv.duojiao.spider.config.GsonHttpMessageConverterConfig" />-->
    <!--<context:component-scan base-package="tv.duojiao.spider.controller"/>-->

    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <bean class="tv.duojiao.spider.service.robot.PublishService" name="publishService">
        <constructor-arg name="taskManager" ref="taskManager"/>
    </bean>
    <bean class="tv.duojiao.spider.gather.commons.CommonSpider" name="commonSpider">
        <constructor-arg name="staticValue" ref="staticValue"/>
        <constructor-arg name="taskManager" ref="taskManager"/>
        <property name="commonWebpageDAO" ref="commonWebpageDAO"/>
        <property name="spiderInfoDAO" ref="spiderInfoDAO"/>
        <property name="commonWebpagePipeline" ref="commonWebpagePipeline"/>
        <property name="contentLengthLimitHttpClientDownloader" ref="contentLengthLimitHttpClientDownloader"/>
        <property name="keywordsExtractor" ref="HANLPExtractor"/>
        <property name="summaryExtractor" ref="HANLPExtractor"/>
        <property name="namedEntitiesExtractor" ref="HANLPExtractor"/>
        <property name="casperjsDownloader" ref="casperjsDownloader"/>
        <!--普通网页爬虫数据输出管道配置-->
        <property name="pipelineList">
            <list>
                <!-- Redis输出 -->
                <!--<ref bean="commonWebpageRedisPipeline"/>-->
                <!-- ES输出-->
                <ref bean="commonWebpagePipeline"/>
                <!-- Json输出 -->
                <!--<ref bean="jsonFilePipeline"/>-->
            </list>
        </property>
    </bean>
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <array>
            </array>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"/>
    <!-- 配置RestTemplate -->
    <!--Http client Factory -->
    <bean id="httpClientFactory"
          class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="connectTimeout" value="10000" />
        <property name="readTimeout" value="10000" />
    </bean>
    <!--RestTemplate -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="httpClientFactory" />
    </bean>

    <task:executor id="executor" pool-size="5"/>
    <task:scheduler id="scheduler" pool-size="10"/>
    <task:annotation-driven executor="executor" scheduler="scheduler"/>
    <context:component-scan base-package="tv.duojiao.spider.**"/>
</beans>